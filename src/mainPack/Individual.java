/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mainPack;

import java.util.ArrayList;
import static mainPack.MainClass.rand;

public class Individual {
    private static int lastId = 0;
    private Integer id;
    private ArrayList<String> genes;
    private double fitness;
    private int front;

    public double getFitness() {
        return fitness;
    }

    public void setFitness(double fitness) {
        this.fitness = fitness;
    }
    
    public Integer getId() {
        return id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public ArrayList<String> getGenes() {
        return genes;
    }

    public void setGenes(ArrayList<String> genes) {
        this.genes = genes;
    }

    public Individual(ArrayList<String> genes) {
        this.id = lastId++;
        this.genes = genes;
        this.fitness = 0;
        this.front = 0;
    }
    
    public Individual(Individual indCopy, boolean copyId, boolean copyFitness, boolean copyChangePoint) {
        if(!copyId) this.id = lastId++;
        else this.id = indCopy.getId();
        this.genes = new ArrayList<>(indCopy.getGenes());
        if(!copyFitness) this.fitness = 0;
        else this.fitness = indCopy.getFitness();
        if(!copyChangePoint) this.front = 0;
        else this.front = indCopy.getChangePoint();
    }

    public int getChangePoint() {
        return front;
    }

    public void setChangePoint(int front) {
        this.front = front;
    }
    
    
    public void changeId(){
        this.id = lastId++;
    }
    
    public Individual() {
        this.genes = new ArrayList();
        this.id = lastId++;
        this.fitness = 0;
    }
    
    @Override
    public String toString(){
        String string;
        string = String.valueOf(id) + "(" + front + ")" +": ";
        
        //Functional version auto generated by Java (crazy)
        string = genes.stream().map((s) -> s + ",").reduce(string, String::concat);
        
        string = string.substring(0, string.length()-1) + ": " + fitness;
        return string;
    }
    
    public String getGenesAsString(){
        String string = "";
        //Functional version auto generated by Java (crazy)
        string = genes.stream().map((s) -> s + ",").reduce(string, String::concat);
        return string;
    }
    
    //Gera um indivíduo aleatório
    public static Individual genenerateRandomIndivual(int maxSize, int minSize) {
        ArrayList<String> genes = new ArrayList();
        int movement;
        int indSize = rand.nextInt(maxSize-minSize) + minSize;
        for (int i = 0; i < indSize; i++) {
            movement = rand.nextInt(12);
            genes.add(String.valueOf(movement));
        }
        
        return new Individual(genes);
    }
}
